// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"go-gin-gorm-wire-viper-zap/internal/api"
	"go-gin-gorm-wire-viper-zap/internal/config"
	"go-gin-gorm-wire-viper-zap/internal/repository"
	"go-gin-gorm-wire-viper-zap/internal/service"
	"go-gin-gorm-wire-viper-zap/pkg/database"
	"go-gin-gorm-wire-viper-zap/pkg/http"
)

// Injectors from wire.go:

// InitializeServer 初始化服务器和所有依赖
func InitializeServer(cfg *config.Config) (*Container, error) {
	server := http.NewServer(cfg)
	db, err := database.NewDB(cfg)
	if err != nil {
		return nil, err
	}
	signalRepositoryImpl := repository.NewSignalRepository(db)
	signalServiceImpl := service.NewSignalService(signalRepositoryImpl)
	signalAPI := api.NewSignalAPI(signalServiceImpl)
	container := &Container{
		Server:    server,
		DB:        db,
		SignalAPI: signalAPI,
	}
	return container, nil
}

// wire.go:

// Container 包含所有依赖
type Container struct {
	Server    *http.Server
	DB        database.DB
	SignalAPI *api.SignalAPI
}
